spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DB_HOST:one4all.cp2u0w48kyqy.ap-south-1.rds.amazonaws.com}:${DB_PORT:3306}/${DB_NAME:one4all}?useSSL=true&requireSSL=true&verifyServerCertificate=false
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}
server.port=8080
spring.jpa.hibernate.ddl-auto=validate-----------shall I provide security config class? 
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
id.prefix=O4AA4O
id.number-length=7

logging.level.org.springframework.jdbc=DEBUG
logging.level.com.zaxxer.hikari=DEBUG
logging.level.com.mysql.cj=TRACE

# Development environment configuration
cors.allowed.origins=https://localhost:3000,https://13.201.103.32:9090,https://d104e4whscre9s.cloudfront.net/
cors.allowed.methods=GET,POST,PUT,DELETE,OPTIONS
aws.ses.region=${AWS_SES_REGION}
aws.ses.access-key=${AWS_SES_ACCESS_KEY}
aws.ses.secret-key=${AWS_SES_SECRET_KEY}
aws.ses.verified-sender=${AWS_SES_VERIFIED_SENDER}
frontend.reset-password.base-url=${FRONTEND_RESET_PASSWORD_BASE_URL}
frontend.base-url=${FRONTEND_BASE_URL}
microservice.url=${MICROSERVICE_URL}
microservice.clientid=${MICROSERVICE_CLIENTID}
microservice.clientsecret=${MICROSERVICE_CLIENTSECRET}
microservice.scope=${MICROSERVICE_SCOPE}
rsa.private.key=${RSA_PRIVATE_KEY_PATH}
rsa.public.key=${RSA_PUBLIC_KEY_PATH}

